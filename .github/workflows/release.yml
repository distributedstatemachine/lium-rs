name: Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

# Grant GITHUB_TOKEN the permissions required to create releases
permissions:
  contents: write    # Required to create releases and upload files
  actions: read      # Required to download artifacts
  packages: read     # May be needed for some dependencies

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build release binaries
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux targets
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: lium-cli-x86_64-unknown-linux-gnu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }} --bin lium

      - name: Rename binary
        run: |
          cp target/${{ matrix.target }}/release/lium ${{ matrix.name }}

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  test-installers:
    name: Test installer scripts
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test install script syntax
        run: bash -n scripts/install.sh

      - name: Test uninstall script syntax
        run: bash -n scripts/uninstall.sh

      - name: Verify script URLs
        run: |
          grep -q "scripts/install.sh" scripts/install.sh
          grep -q "scripts/uninstall.sh" scripts/uninstall.sh

  create-release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    needs: [build, test-installers]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded artifacts
        run: find artifacts -name "lium-cli-*" -type f -exec ls -la {} \;

      - name: Generate checksums
        run: |
          cd artifacts
          for dir in */; do
            if [ -d "$dir" ]; then
              for file in "$dir"lium-cli-*; do
                if [ -f "$file" ]; then
                  shasum -a 256 "$file" >> ../checksums.txt
                fi
              done
            fi
          done
          cd ..
          echo "Generated checksums:"
          cat checksums.txt

      - name: Prepare release files
        run: |
          mkdir -p release-files
          cd artifacts
          for dir in */; do
            if [ -d "$dir" ]; then
              cp "$dir"* ../release-files/
            fi
          done
          cd ..
          cp checksums.txt release-files/

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create release body
        id: release_body
        run: |
          cat > release_body.md << 'EOF'
          # Lium CLI ${{ steps.version.outputs.VERSION }}

          ## 🚀 Quick Install

          ### Linux
          ```bash
          curl -sSL https://raw.githubusercontent.com/distributedstatemachine/lium-rs/main/scripts/install.sh | sh
          ```

          ### Alternative Methods
          - **Download directly**: Choose your platform below
          - **Cargo**: `cargo install lium-cli`

          ## 📦 Platform Downloads

          | Platform | Architecture | Download |
          |----------|--------------|----------|
          | Linux    | x86_64       | [lium-cli-x86_64-unknown-linux-gnu](https://github.com/distributedstatemachine/lium-rs/releases/download/${{ steps.version.outputs.VERSION }}/lium-cli-x86_64-unknown-linux-gnu) |

          ## 🛠️ Installation

          After downloading, make the binary executable and move it to your PATH:

          ```bash
          chmod +x lium-cli-*
          sudo mv lium-cli-* /usr/local/bin/lium
          ```

          ## 🗑️ Uninstall

          ```bash
          curl -sSL https://raw.githubusercontent.com/distributedstatemachine/lium-rs/main/scripts/uninstall.sh | sh
          ```

          ## ✅ Verification

          Verify the download with checksums:
          ```bash
          shasum -a 256 -c checksums.txt
          ```

          ## 📚 Usage

          ```bash
          # Initialize configuration
          lium init

          # List available GPU executors
          lium ls

          # Create a new pod
          lium up --image pytorch/pytorch:latest

          # SSH into your pod
          lium ssh <pod-name>

          # List your active pods
          lium ps

          # Terminate a pod
          lium down <pod-name>
          ```

          ## 🆘 Support

          - 📖 [Documentation](https://github.com/distributedstatemachine/lium-rs)
          - 🐛 [Report Issues](https://github.com/distributedstatemachine/lium-rs/issues)
          - 💬 [Discussions](https://github.com/distributedstatemachine/lium-rs/discussions)
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: Lium CLI ${{ steps.version.outputs.VERSION }}
          body_path: release_body.md
          draft: false
          prerelease: false
          files: release-files/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 